/**
 * My API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AddressTypes } from '../model/models';
import { Countries } from '../model/models';
import { Login200Response } from '../model/models';
import { LoginRequest } from '../model/models';
import { Post } from '../model/models';
import { User } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface DefaultServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Get List of countries
     * Returns a list of all countries in the system
     */
    getCountries(extraHttpRequestParams?: any): Observable<Array<Countries>>;

    /**
     * Get List of entities
     * Returns a list of all entities in the system
     */
    //getEntities(extraHttpRequestParams?: any): Observable<Array<AddressTypes>>;

    /**
     * Get all posts
     * Returns a list of all posts in the system
     */
    getPosts(extraHttpRequestParams?: any): Observable<Array<Post>>;

    /**
     * Get all posts for a user
     * Returns a list of all posts for a given user
     * @param userId ID of the user to retrieve posts for
     */
    getPostsByUserId(userId: string, extraHttpRequestParams?: any): Observable<Array<Post>>;

    /**
     * Get a user by ID
     * Returns a single user by ID
     * @param userId ID of the user to retrieve
     */
    getUserById(userId: string, extraHttpRequestParams?: any): Observable<User>;

    /**
     * Get all users
     * Returns a list of all users in the system
     */
    getUsers(extraHttpRequestParams?: any): Observable<Array<User>>;

    /**
     * Login with email and password
     * 
     * @param loginRequest 
     */
    login(loginRequest?: LoginRequest, extraHttpRequestParams?: any): Observable<Login200Response>;

}
